{"version":3,"file":"iframe.fe65ed32.js","sources":["../../.storybook/preview.js","../../lib/symbols.ts","../../lib/Flipper/index.vue","../../lib/Flipper/LazyFlipper.ts","../../lib/Flipped/index.vue","../../stories/Example/ListTransitions/Card.vue","../../stories/Example/ListTransitions/data.ts","../../stories/Example/ListTransitions/Example.vue","../../stories/Example/SimpleExamples/AnExpandingDiv.vue","../../stories/Example/SimpleExamples/TwoDivs.vue","../../stories/Example/SimpleExamples/ListShuffle.vue","../../stories/Example/StaggerEffects/ExpandedListItem.vue","../../stories/Example/StaggerEffects/ListItem.vue","../../stories/Example/StaggerEffects/Example.vue","../../../../../../../virtual:/@storybook/builder-vite/vite-app.js"],"sourcesContent":["export const parameters = {\n  actions: { argTypesRegex: \"^on[A-Z].*\" },\n  controls: {\n    matchers: {\n      color: /(background|color)$/i,\n      date: /Date$/,\n    },\n  },\n  options: {\n    storySort: {\n      order: [\n        'Example', [\n          'Introduction',\n          'Simple Examples',\n          'List Transitions',\n          'Stagger Effects',\n        ],\n      ],\n    },\n  },\n}\n","import type { InjectionKey } from 'vue'\nimport type { ProvidedAddFlipped, ProvidedAddInverted } from './types'\n\nexport const ProvidedAddFlippedKey: InjectionKey<ProvidedAddFlipped> = Symbol('addFlipped')\nexport const ProvidedAddInvertedKey: InjectionKey<ProvidedAddInverted> = Symbol('addInverted')\n","<template>\n  <component :is=\"props.is\" ref=\"element\">\n    <slot></slot>\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onBeforeUpdate, onMounted, watch, nextTick, provide, withDefaults } from 'vue'\nimport type { SpringOption } from 'flip-toolkit/lib/springSettings/types'\nimport type { HandleEnterUpdateDelete, StaggerConfig } from 'flip-toolkit/lib/types'\nimport { ProvidedAddFlippedKey, ProvidedAddInvertedKey } from 'vue3-flip-toolkit/symbols'\nimport { createLazyFlipper } from './LazyFlipper'\n\nconst props = withDefaults(defineProps<{\n  flipKey: string | number | boolean\n  is?: string\n  decisionData?: any\n  spring?: SpringOption\n  staggerConfig?: StaggerConfig\n  applyTransformOrigin?: boolean\n  handleEnterUpdateDelete?: HandleEnterUpdateDelete\n  debug?: boolean\n}>(), {\n  is: 'div',\n  debug: false,\n})\n\nconst element = ref<HTMLElement>()\nconst flipperInstance = createLazyFlipper({ debug: props.debug })\nconst previousDecisionData = ref<any>(props.decisionData)\n\nonMounted(() => {\n  flipperInstance.initialize(element.value!)\n})\n\nonBeforeUpdate(() => {\n  flipperInstance.recordBeforeUpdate()\n})\n\nwatch(() => props.decisionData, (_, oldValue) => previousDecisionData.value = oldValue)\nwatch(() => props.flipKey, (newVal, oldVal) => {\n  if (newVal == oldVal) { return }\n\n  nextTick(() => {\n    flipperInstance.update(previousDecisionData.value, props.decisionData)\n  })\n})\n\nconst configKeys: (keyof typeof props)[] = ['spring', 'staggerConfig', 'applyTransformOrigin', 'handleEnterUpdateDelete', 'debug']\nconfigKeys.forEach(key => {\n  watch(() => props[key], (v) => flipperInstance.setOptions({ [key]: v }))\n})\n\nprovide(ProvidedAddFlippedKey, (props) => {\n  flipperInstance.addFlipped(props as any)\n})\n\nprovide(ProvidedAddInvertedKey, (props) => {\n  flipperInstance.addInverted(props)\n})\n</script>\n","import { Flipper } from 'flip-toolkit'\n\ntype ConstructorProps = ConstructorParameters<typeof Flipper>[0]\n\nexport interface LazyFlipper extends Omit<Flipper, 'debug'> {\n  initialize(element: Element): void\n  setOptions(options: Omit<Partial<ConstructorProps>, 'element'>): void\n\n  /**\n   * @override\n    */\n  get debug(): boolean\n  set debug(value: boolean)\n}\n\nexport const createLazyFlipper = (initOptions: Partial<ConstructorProps> = {}): LazyFlipper => {\n  const options: Partial<ConstructorProps> = { ...initOptions }\n  const flippedQueue: Parameters<Flipper['addFlipped']>[] = []\n  const invertedQueue: Parameters<Flipper['addInverted']>[] = []\n\n  let flipperInstance: Flipper | null = null\n\n  return new Proxy({\n    initialize(this: LazyFlipper, element: HTMLElement) {\n      const instance = new Flipper({ ...options, element })\n\n      flippedQueue.splice(0, flippedQueue.length).forEach(_ => instance.addFlipped(..._))\n      invertedQueue.splice(0, invertedQueue.length).forEach(_ => instance.addInverted(..._))\n\n      flipperInstance = instance\n    },\n    setOptions(this: LazyFlipper, newOptions: Partial<ConstructorProps>) {\n      Object.assign(options, newOptions)\n\n      if (flipperInstance) {\n        Object.assign(flipperInstance, options)\n      }\n    },\n    addFlipped(this: LazyFlipper, ...args: Parameters<Flipper['addFlipped']>) {\n      if (!flipperInstance) {\n        flippedQueue.push(args)\n      }\n\n      flipperInstance?.addFlipped(...args)\n    },\n    addInverted(this: LazyFlipper, ...args: Parameters<Flipper['addInverted']>) {\n      if (!flipperInstance) {\n        invertedQueue.push(args)\n      }\n\n      flipperInstance?.addInverted(...args)\n    },\n    get debug() {\n      return flipperInstance?.['debug'] ?? false\n    },\n    set debug(value: boolean) {\n      options.debug = value\n\n      if (flipperInstance) {\n        flipperInstance['debug'] = value\n      }\n    },\n  } as Partial<LazyFlipper>, {\n    get(this: LazyFlipper, target: LazyFlipper, propertyKey: keyof Flipper) {\n      if (propertyKey in target) {\n        return target[propertyKey]\n      }\n\n      if (flipperInstance && propertyKey in flipperInstance) {\n        return flipperInstance[propertyKey]\n      }\n\n      if (propertyKey === 'recordBeforeUpdate' || propertyKey === 'update') {\n        return () => {}\n      }\n\n      return null\n    },\n  }) as LazyFlipper\n}\n","<template>\n  <component :is=\"props.is\" ref=\"element\">\n    <slot></slot>\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport { inject, onMounted, ref, withDefaults } from 'vue'\nimport type { DecisionData, FlipId } from 'flip-toolkit/lib/types'\nimport type { SpringOption } from 'flip-toolkit/lib/springSettings/types'\nimport { ProvidedAddFlippedKey, ProvidedAddInvertedKey } from 'vue3-flip-toolkit/symbols'\nimport type { CamelCase } from 'vue3-flip-toolkit/types'\n\n/**\n * Copied structure from flip-toolkit.\n *\n * @see {@link flip-toolkit/lib/types#SerializableFlippedProps}\n * @see {@link flip-toolkit/lib/types#CallbackFlippedProps}\n */\ntype PropsAndHandlers = {\n  is?: string\n  flipId?: FlipId\n  portalKey?: string\n  opacity?: boolean\n  translate?: boolean\n  scale?: boolean\n  transformOrigin?: string\n  spring?: SpringOption\n  stagger?: string | boolean\n  inverseFlipId?: string\n  delayUntil?: FlipId\n  shouldFlip?: (previousDecisionData: any, currentDecisionData: any) => boolean\n  shouldInvert?: (previousDecisionData: any, currentDecisionData: any) => boolean\n  /*\n   * HACK: event handlers, we want to detect if handler is exists\n   * ref: https://blog.davy.tw/posts/access-listeners-in-vue3-components/\n   */\n  onAppear?: (data: { flipId: FlipId; el: HTMLElement; index: number; decisionData?: DecisionData }) => void\n  onStart?: (data: { flipId: FlipId; el: HTMLElement; decisionData?: DecisionData }) => void\n  onSpringUpdate?: (data: { flipId: FlipId; springValue: number }) => void\n  onComplete?: (data: { flipId: FlipId; el: HTMLElement; decisionData?: DecisionData }) => void\n  onExit?: (data: {\n    flipId: FlipId\n    el: HTMLElement\n    index: number\n    removeElement: () => void\n    decisionData?: DecisionData\n  }) => void\n}\n\nconst { flipId, inverseFlipId, ...props } = withDefaults(defineProps<PropsAndHandlers>(), {\n  is: 'div',\n  opacity: false,\n  scale: false,\n  translate: false,\n})\n\ntype HandlerData<Handler extends `on${string}`> =\n  Handler extends keyof PropsAndHandlers ? Parameters<Required<PropsAndHandlers>[Handler]>[0] : never\ntype EventTypes = 'appear' | 'start' | 'spring-update' | 'complete' | 'exit'\nconst emits = defineEmits<{\n  <T extends EventTypes>(e: T, data: HandlerData<CamelCase<`on-${T}`>>): void\n}>()\n\nconst element = ref<HTMLElement>()\nconst addFlipped = inject(ProvidedAddFlippedKey)\nconst addInverted = inject(ProvidedAddInvertedKey)\n\nonMounted(() => {\n  if (flipId) {\n    addFlipped?.({\n      flipId,\n      element: element.value!,\n      portalKey: props.portalKey,\n      opacity: props.opacity,\n      translate: props.translate,\n      scale: props.scale,\n      transformOrigin: props.transformOrigin,\n      spring: props.spring,\n      stagger: props.stagger,\n      delayUntil: props.delayUntil,\n      onAppear: props.onAppear ? (el, index, decisionData) => emits('appear', { flipId, el, index, decisionData }) : undefined,\n      onStart: props.onStart ? (el, decisionData) => emits('start', { flipId, el, decisionData }) : undefined,\n      onSpringUpdate: props.onSpringUpdate ? (springValue) => emits('spring-update', { flipId, springValue }) : undefined,\n      onComplete: props.onComplete ? (el, decisionData) => emits('complete', { flipId, el, decisionData }) : undefined,\n      onExit: props.onExit\n        ? (el, index, removeElement, decisionData) => emits('exit', {\n          flipId,\n          el,\n          index,\n          removeElement,\n          decisionData,\n        })\n        : undefined,\n    })\n  }\n  else if (inverseFlipId) {\n    addInverted?.({\n      element: element.value!,\n      parent: { dataset: { flipId: inverseFlipId } } as unknown as HTMLElement,\n      opacity: props.opacity,\n      scale: props.scale,\n      translate: props.translate,\n      transformOrigin: undefined as unknown as string,\n    })\n  }\n  else {\n    throw new Error('Flipped needs flipId or inverseFlipId')\n  }\n})\n</script>\n","<template>\n  <Flipped\n    is=\"li\"\n    :class=\"[style.item, { [style.list]: type === 'list' }]\"\n    :flip-id=\"flipId\"\n    :stagger=\"stagger\"\n    :should-invert=\"shouldFlip\"\n    @appear=\"onElementAppear\"\n    @exit=\"(data) => type === 'grid' ? onGridExit(data) : onListExit(data)\"\n  >\n    <Flipped :inverse-flip-id=\"flipId\">\n      <Flipped\n        :flip-id=\"`${flipId}-content`\"\n        translate\n        :should-flip=\"shouldFlip\"\n        :delay-until=\"flipId\"\n      >\n        <h3>{{ title }}</h3>\n        <p>{{ title }}</p>\n      </Flipped>\n      <Flipped\n        is=\"button\"\n        :flip-id=\"`${flipId}-button`\"\n        :should-flip=\"shouldFlip\"\n        :delay-until=\"flipId\"\n        :class=\"style.remove\"\n        @click=\"emits('filtered', id)\"\n      >&times;</Flipped>\n    </Flipped>\n  </Flipped>\n</template>\n\n<script setup lang=\"ts\">\nimport { useCssModule } from 'vue'\nimport { Flipped, spring } from 'vue3-flip-toolkit'\n\nconst props = defineProps<{\n  id: number\n  title: string\n  type: string\n  stagger: boolean\n}>()\nconst emits = defineEmits<{\n  (e: 'filtered', id: number): void\n}>()\n\nconst style = useCssModule()\nconst flipId = `item-${props.id}`\n\nconst shouldFlip = (prev: any, current: any) => prev.type !== current.type\nconst onElementAppear = ({ el, index }: any) => {\n  spring({\n    onUpdate: v => el.style.opacity = v,\n    delay: index * 50,\n  })\n}\nconst onExit = (type: string) => ({ el, index, removeElement }: any) => {\n  spring({\n    config: { overshootClamping: true },\n    onUpdate: val => {\n      el.style.transform = `scale${type === \"grid\" ? \"X\" : \"Y\"}(${1 - (val as number)})`\n    },\n    delay: index * 50,\n    onComplete: () => {\n      el.style.opacity = \"\"\n      removeElement()\n    },\n  })\n}\nconst onGridExit = onExit(\"grid\")\nconst onListExit = onExit(\"list\")\n</script>\n\n<style module>\n.list.item {\n  margin-bottom: 1rem;\n}\n\n.list.item:last-child {\n  margin-bottom: 0;\n}\n\n.item {\n  overflow: hidden;\n  display: block;\n  border-radius: 4px;\n  background-color: white;\n}\n\n.item h3 {\n  font-size: 1.1rem;\n}\n\n.item > div {\n  padding: 0 1.25rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n}\n\n.item h3 {\n  margin-bottom: 0;\n}\n\n.item p {\n  font-style: italic;\n  margin-top: 0;\n}\n\n.remove {\n  border: 0;\n  background: transparent;\n  cursor: pointer;\n  font-size: 2.2rem;\n  color: #ff4057;\n  position: relative;\n  left: 0.5rem;\n  width: 1.5rem;\n}\n</style>\n","export default [\n  { id: 1, title: \"Twas brillig and the slithy toves\" },\n  { id: 2, title: \"Did gyre and gimbel in the wabe\" },\n  { id: 3, title: \"All mimsy were the borogroves\" },\n  { id: 4, title: \"The mome raths outgrabe\" },\n  { id: 5, title: \"Beware the jabberwock my son!!\" },\n  { id: 6, title: \"The jaws that bite, the claws that snatch\" },\n]\n","<template>\n  <div :class=\"style.example\">\n    <Flipper\n      :flip-key=\"`${type}-${JSON.stringify(listData)}`\"\n      :spring=\"spring\"\n      :stagger-config=\"{\n        default: {\n          reverse: stagger !== 'forward',\n          speed: 1,\n        },\n      }\"\n      :decision-data=\"{ type, listData }\"\n    >\n      <div :class=\"style.container\">\n        <fieldset>\n          <legend>Sort</legend>\n          <label v-for=\"v in ['asc', 'desc']\" :key=\"v\">\n            <input type=\"radio\" v-model=\"sort\" :value=\"v\" />\n            {{ v }}\n          </label>\n        </fieldset>\n        <fieldset>\n          <legend>Type</legend>\n          <label v-for=\"v in ['grid', 'list']\" :key=\"v\">\n            <input type=\"radio\" v-model=\"type\" :value=\"v\" />\n            {{ v }}\n          </label>\n        </fieldset>\n        <fieldset>\n          <legend>Stagger</legend>\n          <label v-for=\"v in ['forward', 'reverse', 'none']\" :key=\"v\">\n            <input type=\"radio\" v-model=\"stagger\" :value=\"v\" />\n            {{ v }}\n          </label>\n        </fieldset>\n        <fieldset>\n          <legend>Spring</legend>\n          <label v-for=\"v in ['stiff', 'noWobble', 'veryGentle', 'gentle', 'wobbly']\" :key=\"v\">\n            <input type=\"radio\" v-model=\"spring\" :value=\"v\" />\n            {{ v }}\n          </label>\n        </fieldset>\n      </div>\n      <div>\n        <button\n          v-if=\"filteredIds.length > 0\"\n          :class=\"style.showAll\"\n          @click=\"filteredIds = []\"\n        >show all cards</button>\n      </div>\n      <Flipped :class=\"type === 'grid' ? style.grid : style.list\" flip-id=\"list\">\n        <Flipped is=\"ul\" :class=\"style.listContents\" inverse-flip-id=\"list\">\n          <Card\n            v-for=\"({ id, title }) in listData\"\n            :key=\"id\"\n            :id=\"id\"\n            :title=\"title\"\n            :stagger=\"stagger !== 'none'\"\n            :type=\"type\"\n            @filtered=\"addFilteredIds(id)\"\n          />\n        </Flipped>\n      </Flipped>\n    </Flipper>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, ref, useCssModule, watch } from 'vue'\nimport { Flipper, Flipped } from 'vue3-flip-toolkit'\n\nimport Card from './Card.vue'\nimport data from './data'\n\nconst style = useCssModule()\nconst sort = ref<'asc' | 'desc'>('asc')\nconst type = ref<'grid' | 'list'>('list')\nconst stagger = ref<'forward' | 'reverse' | 'none'>('forward')\nconst spring = ref<'stiff' | 'noWobble' | 'veryGentle' | 'gentle' | 'wobbly'>('stiff')\nconst filteredIds = ref<number[]>([])\nconst listData = computed(() => data\n  .filter(({ id }) => !filteredIds.value.includes(id))\n  .sort(({ id: l }, { id: r }) => sort.value === 'asc' ? l - r : r - l)\n)\n\nconst addFilteredIds = (id: number) => filteredIds.value.push(id)\n\nwatch(stagger, () => {\n  sort.value = sort.value === 'asc' ? 'desc' : 'asc'\n})\n</script>\n\n<style module>\n.example {\n  padding: 2rem;\n}\n\n.example > * {\n  max-width: 1100px;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.example *,\n.example *::before,\n.example *::after {\n  box-sizing: border-box;\n}\n\n.grid > ul {\n  list-style-type: none;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(14rem, 1fr));\n  grid-auto-rows: 8rem;\n  grid-gap: 1rem;\n  padding: 0;\n  margin: 0;\n}\n\n.list {\n  grid-gap: 1rem;\n  margin: 2rem 0;\n}\n\n.grid,\n.list {\n  border-radius: 5px;\n  background-color: #ececec;\n  margin-top: 2.5rem;\n  max-width: 900px;\n}\n\n.list > ul,\n.grid > ul {\n  width: 100%;\n  list-style-type: none;\n  margin: 0;\n  padding: 1rem;\n}\n\n.showAll {\n  padding: 0.5rem 1rem;\n  background-color: #ff4057;\n  color: white;\n  font-weight: bold;\n  border: 0;\n  border-radius: 3px;\n}\n\n.container {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.container > label {\n  min-width: 4.5rem;\n}\n\n.example legend {\n  font-weight: bold;\n}\n\n.example fieldset {\n  border: 0;\n  padding: 1rem;\n}\n\n.example label {\n  margin-right: 1.5rem;\n  cursor: pointer;\n}\n\n.example input {\n  position: relative;\n  margin-right: 0.5rem;\n}\n</style>\n","<template>\n  <Flipper :flip-key=\"flip\">\n    <Flipped flip-id=\"box\" :class=\"flip ? style.boxBig : style.box\" @click=\"toggle\"></Flipped>\n  </Flipper>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, useCssModule } from 'vue'\nimport { Flipped, Flipper } from 'vue3-flip-toolkit'\n\nconst style = useCssModule()\nconst flip = ref(false)\n\nconst toggle = () => { flip.value = !flip.value }\n</script>\n\n<style module>\n.box {\n  width: 100px;\n  height: 100px;\n  cursor: pointer;\n  background-image: linear-gradient(\n    45deg,\n    rgb(121, 113, 234),\n    rgb(97, 71, 182)\n  );\n}\n\n.boxBig {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  cursor: pointer;\n  background-image: linear-gradient(\n    45deg,\n    rgb(121, 113, 234),\n    rgb(97, 71, 182)\n  );\n}\n</style>\n","<template>\n  <Flipper :flip-key=\"flip\">\n    <Flipped flip-id=\"box\" :class=\"style.boxBig\" @click=\"toggle\" v-if=\"flip\"></Flipped>\n    <Flipped flip-id=\"box\" :class=\"style.box\" @click=\"toggle\" v-else></Flipped>\n  </Flipper>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, useCssModule } from 'vue'\nimport { Flipped, Flipper } from 'vue3-flip-toolkit'\n\nconst style = useCssModule()\nconst flip = ref(false)\n\nconst toggle = () => { flip.value = !flip.value }\n</script>\n\n<style module>\n.box {\n  width: 100px;\n  height: 100px;\n  cursor: pointer;\n  background-image: linear-gradient(\n    45deg,\n    rgb(234, 113, 159),\n    rgb(182, 71, 132)\n  );\n}\n\n.boxBig {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  cursor: pointer;\n  background-image: linear-gradient(\n    45deg,\n    rgb(121, 113, 234),\n    rgb(97, 71, 182)\n  );\n}\n</style>\n","<template>\n  <Flipper :flip-key=\"list.join('')\">\n    <button @click=\"shuffle()\">shuffle</button>\n    <ul :class=\"style.list\">\n      <Flipped v-for=\"i in list\" is=\"li\" :key=\"i\" :flip-id=\"i\">{{ i }}</Flipped>\n    </ul>\n  </Flipper>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, useCssModule } from 'vue'\nimport { Flipped, Flipper } from 'vue3-flip-toolkit'\n\nconst style = useCssModule()\nconst list = ref(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'])\n\nconst shuffle = () => {\n  for (let i = list.value.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n\n    [list.value[i], list.value[j]] = [list.value[j], list.value[i]]\n  }\n}\n</script>\n\n<style module>\n.list {\n  margin: 0;\n  padding: 0;\n  margin-top: 0.5rem;\n  list-style-type: none;\n  display: flex;\n  font-size: 2.5rem;\n}\n\n.list > li {\n  margin-left: 0.5rem;\n  margin-right: 0.5rem;\n}\n</style>\n","<template>\n  <Flipped\n    :flip-id=\"`listItem-${index}`\"\n    stagger=\"card\"\n    :class=\"style.item\"\n    @click=\"emits('click')\"\n    @start=\"onStart\"\n  >\n    <Flipped :inverse-flip-id=\"`listItem-${index}`\" :class=\"style.content\">\n      <Flipped\n        :flip-id=\"`avatar-${index}`\"\n        stagger=\"card-content\"\n        :delay-until=\"`listItem-${index}`\"\n        :class=\"style.avatar\"\n      ></Flipped>\n      <div :class=\"style.description\">\n        <Flipped\n          v-for=\"i in 3\"\n          :key=\"i\"\n          :flip-id=\"`description-${index}-${i}`\"\n          stagger=\"card-content\"\n          :delay-until=\"`listItem-${index}`\"\n        ></Flipped>\n      </div>\n      <div :class=\"style.additional\">\n        <div v-for=\"i in 3\" :key=\"i\"></div>\n      </div>\n    </Flipped>\n  </Flipped>\n</template>\n\n<script setup lang=\"ts\">\nimport { useCssModule } from 'vue'\nimport { Flipped } from 'vue3-flip-toolkit'\n\nconst { index } = defineProps<{\n  index: number\n}>()\nconst emits = defineEmits(['click'])\n\nconst style = useCssModule()\nconst onStart = ({ el }: { el: HTMLElement }) => {\n  setTimeout(() => {\n    el.classList.add(style.animatedIn)\n  }, 400)\n}\n</script>\n\n<style module>\n.item {\n  cursor: pointer;\n  background-color: #d0d0d0;\n}\n.content {\n  padding: 2rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n.avatar {\n  width: 8rem;\n  height: 8rem;\n  border-radius: 100px;\n  background-color: grey;\n  margin-right: 0;\n  margin-bottom: 1rem;\n}\n.description {\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n}\n.description > div {\n  background-color: grey;\n  width: 14rem;\n  border-radius: 6px;\n  height: 0.5rem;\n}\n.description > div:nth-of-type(2) {\n  width: 11rem;\n}\n.description > div:nth-of-type(3) {\n  width: 8rem;\n}\n.description > div + div {\n  margin-top: 1rem;\n}\n\n.additional {\n  width: 100%;\n  margin-top: 2rem;\n}\n\n.additional > div {\n  opacity: 0;\n  border-radius: 3px;\n  background-color: gray;\n  height: 5rem;\n}\n\n/* content fade in animations */\n@keyframes fadeIn {\n  0% {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n.animatedIn .additional > div {\n  animation: fadeIn 0.4s forwards;\n}\n\n.additional > div:nth-of-type(2) {\n  animation-delay: 0.15s;\n}\n.additional > div:nth-of-type(3) {\n  animation-delay: 0.3s;\n}\n.additional > div + div {\n  margin-top: 1rem;\n}\n</style>\n","<template>\n  <Flipped\n    :flip-id=\"`listItem-${index}`\"\n    stagger=\"card\"\n    :should-invert=\"shouldFlip\"\n    :class=\"style.item\"\n    @click=\"emits('click')\"\n  >\n    <Flipped :inverse-flip-id=\"`listItem-${index}`\" :class=\"style.content\">\n      <Flipped\n        :flip-id=\"`avatar-${index}`\"\n        stagger=\"card-content\"\n        :should-flip=\"shouldFlip\"\n        :delay-until=\"`listItem-${index}`\"\n        :class=\"style.avatar\"\n      ></Flipped>\n      <div :class=\"style.description\">\n        <Flipped\n          v-for=\"i in 3\"\n          :key=\"i\"\n          :flip-id=\"`description-${index}-${i}`\"\n          stagger=\"card-content\"\n          :should-flip=\"shouldFlip\"\n          :delay-until=\"`listItem-${index}`\"\n        ></Flipped>\n      </div>\n    </Flipped>\n  </Flipped>\n</template>\n\n<script setup lang=\"ts\">\nimport { useCssModule } from 'vue'\nimport { Flipped } from 'vue3-flip-toolkit'\n\nconst { index } = defineProps<{\n  index: number\n}>()\nconst emits = defineEmits(['click'])\n\nconst style = useCssModule()\nconst shouldFlip = (prev: number | false, current: number | false) =>\n  index === prev || index === current\n</script>\n\n<style module>\n.item {\n  width: 100%;\n  cursor: pointer;\n  background-color: #d0d0d0;\n  overflow: hidden;\n}\n.content {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 1rem;\n}\n.avatar {\n  width: 4rem;\n  height: 4rem;\n  border-radius: 100px;\n  background-color: grey;\n  margin-right: 2rem;\n}\n.description > div {\n  background-color: grey;\n  width: 14rem;\n  border-radius: 6px;\n  height: 0.5rem;\n}\n.description > div:nth-of-type(2) {\n  width: 11rem;\n}\n.description > div:nth-of-type(3) {\n  width: 8rem;\n}\n.description > div + div {\n  margin-top: 1rem;\n}\n</style>\n","<template>\n  <div :class=\"style.example\">\n    <Flipper\n      spring=\"gentle\"\n      :class=\"style.container\"\n      :flip-key=\"focused\"\n      :stagger-config=\"{\n        card: {\n          reverse: focused !== false,\n        },\n      }\"\n      :decision-data=\"focused\"\n    >\n      <ul :class=\"style.list\">\n        <li v-for=\"idx in 7\" :key=\"idx\">\n          <ExpandedListItem v-if=\"idx === focused\" :index=\"idx\" @click=\"onClick(idx)\" />\n          <ListItem v-else :index=\"idx\" @click=\"onClick(idx)\" />\n        </li>\n      </ul>\n    </Flipper>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, useCssModule } from 'vue'\nimport { Flipper } from 'vue3-flip-toolkit'\nimport ExpandedListItem from './ExpandedListItem.vue'\nimport ListItem from './ListItem.vue'\n\nconst style = useCssModule()\nconst focused = ref<number | false>(false)\n\nconst onClick = (idx: number) => {\n  focused.value = focused.value === idx ? false : idx\n}\n</script>\n\n<style module>\n.container {\n  width: 400px;\n  margin: 2rem auto;\n}\n\n.list {\n  list-style-type: none;\n  display: flex;\n  flex-direction: column;\n  padding: 0;\n  margin: 0;\n  height: 100vh;\n}\n\n.list li {\n  width: 100%;\n}\n\n.list li + li {\n  margin-top: 1rem;\n}\n</style>\n","import { configure } from '@storybook/vue3';\n    /* // preview entry\nimport '/home/runner/work/vue3-flip-toolkit/vue3-flip-toolkit/node_modules/@storybook/core-client/dist/esm/globals/polyfills.js';\n// preview entry\nimport '/home/runner/work/vue3-flip-toolkit/vue3-flip-toolkit/node_modules/@storybook/core-client/dist/esm/globals/globals.js'; */\n\n    import { addDecorator, addParameters, addLoader, addArgTypesEnhancer, addArgsEnhancer } from '@storybook/client-api';\n    import { logger } from '@storybook/client-logger';\n    import * as config_0 from '/@fs//home/runner/work/vue3-flip-toolkit/vue3-flip-toolkit/.storybook/preview.js'\nimport * as config_1 from '/@fs//home/runner/work/vue3-flip-toolkit/vue3-flip-toolkit/node_modules/@storybook/addon-docs/dist/esm/frameworks/common/config.js'\nimport * as config_2 from '/@fs//home/runner/work/vue3-flip-toolkit/vue3-flip-toolkit/node_modules/@storybook/addon-docs/dist/esm/frameworks/vue3/config.js'\nimport * as config_3 from '/@fs//home/runner/work/vue3-flip-toolkit/vue3-flip-toolkit/node_modules/@storybook/addon-links/dist/esm/preset/addDecorator.js'\nimport * as config_4 from '/@fs//home/runner/work/vue3-flip-toolkit/vue3-flip-toolkit/node_modules/@storybook/addon-actions/dist/esm/preset/addDecorator.js'\nimport * as config_5 from '/@fs//home/runner/work/vue3-flip-toolkit/vue3-flip-toolkit/node_modules/@storybook/addon-actions/dist/esm/preset/addArgs.js'\nimport * as config_6 from '/@fs//home/runner/work/vue3-flip-toolkit/vue3-flip-toolkit/node_modules/@storybook/addon-backgrounds/dist/esm/preset/addDecorator.js'\nimport * as config_7 from '/@fs//home/runner/work/vue3-flip-toolkit/vue3-flip-toolkit/node_modules/@storybook/addon-backgrounds/dist/esm/preset/addParameter.js'\nimport * as config_8 from '/@fs//home/runner/work/vue3-flip-toolkit/vue3-flip-toolkit/node_modules/@storybook/addon-measure/dist/esm/preset/addDecorator.js'\nimport * as config_9 from '/@fs//home/runner/work/vue3-flip-toolkit/vue3-flip-toolkit/node_modules/@storybook/addon-outline/dist/esm/preset/addDecorator.js'\n    import * as story_0 from '/@fs//home/runner/work/vue3-flip-toolkit/vue3-flip-toolkit/stories/Introduction.stories.mdx'\nimport * as story_1 from '/@fs//home/runner/work/vue3-flip-toolkit/vue3-flip-toolkit/stories/Example/ListTransitions/index.stories.ts'\nimport * as story_2 from '/@fs//home/runner/work/vue3-flip-toolkit/vue3-flip-toolkit/stories/Example/SimpleExamples/index.stories.ts'\nimport * as story_3 from '/@fs//home/runner/work/vue3-flip-toolkit/vue3-flip-toolkit/stories/Example/StaggerEffects/index.stories.ts'\n      \n    const configs = [config_0,config_1,config_2,config_3,config_4,config_5,config_6,config_7,config_8,config_9]\n    configs.forEach(config => {\n      Object.keys(config).forEach((key) => {\n        const value = config[key];\n        switch (key) {\n          case 'args':\n          case 'argTypes': {\n            return logger.warn('Invalid args/argTypes in config, ignoring.', JSON.stringify(value));\n          }\n          case 'decorators': {\n            return value.forEach((decorator) => addDecorator(decorator, false));\n          }\n          case 'loaders': {\n            return value.forEach((loader) => addLoader(loader, false));\n          }\n          case 'parameters': {\n            return addParameters({ ...value }, false);\n          }\n          case 'argTypesEnhancers': {\n            return value.forEach((enhancer) => addArgTypesEnhancer(enhancer));\n          }\n          case 'argsEnhancers': {\n            return value.forEach((enhancer) => addArgsEnhancer(enhancer))\n          }\n          case 'globals':\n          case 'globalTypes': {\n            const v = {};\n            v[key] = value;\n            return addParameters(v, false);\n          }\n          default: {\n            // eslint-disable-next-line prefer-template\n            return console.log(key + ' was not supported :( !');\n          }\n        }\n      });\n    })\n    \n    /* TODO: not quite sure what to do with this, to fix HMR\n    if (import.meta.hot) {\n        import.meta.hot.accept();    \n    }\n    */\n    \n    configure(() => [story_0,story_1,story_2,story_3].filter(el => el.default), { hot: import.meta.hot }, false); // not sure if the import.meta.hot thing is correct"],"names":["actions","argTypesRegex","controls","matchers","color","date","options","storySort","order","ProvidedAddFlippedKey","Symbol","ProvidedAddInvertedKey","element","ref","flipperInstance","initOptions","__spreadValues","flippedQueue","invertedQueue","Proxy","initialize","instance","Flipper","__spreadProps","splice","length","forEach","addFlipped","_","addInverted","setOptions","newOptions","assign","args","push","value","debug","get","target","propertyKey","createLazyFlipper","props","previousDecisionData","decisionData","recordBeforeUpdate","oldValue","flipKey","newVal","oldVal","update","key","v","props2","inject","flipId","portalKey","opacity","translate","scale","transformOrigin","spring","stagger","delayUntil","onAppear","el","index","emits","onStart","onSpringUpdate","springValue","onComplete","onExit","removeElement","inverseFlipId","Error","parent","dataset","style","useCssModule","id","shouldFlip","prev","current","type","onElementAppear","onUpdate","delay","config","overshootClamping","transform","val","onGridExit","onListExit","title","sort","filteredIds","listData","computed","data","filter","includes","l","r","flip","toggle","list2","i","j","Math","floor","random","classList","add","animatedIn","focused","onClick","idx","config_0","config_1","config_2","config_3","config_4","config_5","config_6","config_7","config_8","config_9","keys","logger","warn","JSON","stringify","decorator","addDecorator","loader","addLoader","addParameters","enhancer","addArgTypesEnhancer","addArgsEnhancer","console","log","configure","story_0","story_1","story_2","story_3","default","hot"],"mappings":"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"}